#!/usr/bin/env bash
source /etc/init.wrapper/config-lib.sh

## environment variables
##
##  - ADMIN_ENABLED           : set to 1 to enable admin user
##  - ADMIN_PASSWORD          : password for user admin
##  - ADMIN_SSH_KEY_URI       : ssh public key uri
##  - ADMIN_SSH_KEY           : public ssh key
##  - ROOT_PASSWORD           : password for user root
##  - ROOT_SSH_KEY_URI        : ssh public key uri
##  - ROOT_SSH_KEY            : public ssh key
##

ADMIN_ENABLED=${ADMIN_ENABLED:=0}
ADMIN_PASSWORD=${ADMIN_PASSWORD:=}
ADMIN_SSH_KEY_URI=${ADMIN_SSH_KEY_URI:=}
ADMIN_SSH_KEY=${ADMIN_SSH_KEY:=}
ROOT_PASSWORD=${ROOT_PASSWORD:=$(echo $RANDOM | openssl passwd -1 -stdin)}
ROOT_SSH_KEY_URI=${ROOT_SSH_KEY_URI:=}
ROOT_SSH_KEY=${ROOT_SSH_KEY:=}


change_password() {
	local user=$1
	local password=$2
	test -n "${user}" -a -n "${password}" && {
		echo "${user}:${password}" | chpasswd 1>/dev/null 2>/dev/null
		etckeeper commit "changed ${user} password" 1>/dev/null 2>/dev/null
	} || true
}

add_ssh_key() {
	local user=$1
	local ssh_key_uri=$2
	local ssh_key=$3
	local pubkey=""

	test "$user" = "root" && {
		home=/root
		sudo=
	} || {
		home=/home/$user
		sudo="sudo -u $user"
	}
	
	test -n "${ssh_key_uri}" && {
		pubkey=$( curl -s -L -o - "${ssh_key_uri}" )
	}
	test -n "${ssh_key}" && {
		pubkey=${ssh_key}
	}
	test -n "${pubkey}" && {
		mkdir -m 0700 -p ${home}/.ssh >/dev/null 2>&1 || true
		echo "${pubkey}" >> ${home}/.ssh/authorized_keys
		chmod 400 ${home}/.ssh/authorized_keys
		chown $user: -R ${home}/.ssh
	} || true
}

## admin user
test ${ADMIN_ENABLED} = '1' && {
  change_password  admin  "${ADMIN_PASSWORD}"
  add_ssh_key      admin  "${ADMIN_SSH_KEY_URI}" "${ADMIN_SSH_KEY}"
}

## root
change_password  root   "${ROOT_PASSWORD}"
add_ssh_key      root   "${ROOT_SSH_KEY_URI}" "${ROOT_SSH_KEY}"
